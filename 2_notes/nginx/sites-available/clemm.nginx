# sites configuration for red.clemm.me

server {
	listen 80;
	listen [::]:80;

	server_name clemm.me www.clemm.me;
	charset utf-8;

	# root /home/clement/www/site/static;
	# location / {
	#		try_files $uri $uri/index.html;
	# }

	return 301 https://$host$request_uri;
}

server {
	listen 443 ssl;
	listen [::]:443 ssl;

	server_name clemm.me www.clemm.me;
	charset utf-8;

	keepalive_timeout 5;

	# SSL configurations
	ssl_certificate /etc/letsencrypt/live/clemm.me/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/clemm.me/privkey.pem;

	# SSL more configurations
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_prefer_server_ciphers on;
	ssl_dhparam /etc/ssl/certs/dhparam.pem;
	ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
	ssl_session_timeout 1d;
	ssl_session_cache shared:SSL:50m;
	ssl_stapling on;
	ssl_stapling_verify on;
	add_header Strict-Transport-Security max-age=15768000;


	# max upload size
	client_max_body_size 75M;

	# path for static files
	root /home/clement/www/site/static;

	location = /favicon.ico { access_log off; log_not_found off; }

	location / {
		# checks for static file, if not found proxy to app
		# tries for this, then this, then this...
		try_files $uri $uri/index.html @proxy_to_app;
		# try_files $uri @proxy_to_app $uri/index.html;
	}

	location /static {
		autoindex off;
		alias /home/clement/www/site/static;
	}

	location /media {
		autoindex off;
		alias /home/clement/www/site/media;
	}

	location @proxy_to_app {
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $http_host;

		# used to make sure backend returns https/http url
		proxy_set_header X-Forwarded-Proto $scheme;

		# uncomment this to use websockets/streaming requests.
		# must run code with async worker classes
		proxy_buffering off;

		# enable this if and only if you use HTTPS
		proxy_set_header X-Forwarded-Proto https;

		# we don't want nginx trying to do something clever
		# with redirects, we set the Host: header above already.
		proxy_redirect off;
		proxy_pass http://unix:/run/gunicorn.socket;
	}

	error_page 502 /500.html;
	# error_page 404 500 502 503 504 /500.html;

}
